{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":"Self Hosted <p>This repo details my self-hosted environments, the services I run, and my approach to build and manage everything.What is self hosting?\u00a0\u00b7\u00a0My approach</p>"},{"location":"#environments","title":"Environments","text":""},{"location":"#demo","title":"Demo","text":"<p>23 container(s): An assortment of containers for demonstrative purposes.</p>"},{"location":"#hardware","title":"Hardware","text":"<ul> <li>Raspberry Pi 4b</li> </ul> <p>Note: Given the limited hardware, I do not run all containers at the same time.</p>"},{"location":"#example","title":"Example","text":"<p>3 container(s): This is an example environment with a few containers to get you started.</p>"},{"location":"my_approach/","title":"My approach","text":"<p>A large environment leads to large compose and environment files which leads to all sorts of problems in terms of complexity, maintainability, readability, performance, scalability, security, privacy, and dependency management. My approach modularizes each environment, stack, and container into smaller chunks and manage them through a single, easy to use tool.</p>"},{"location":"my_approach/#key-features","title":"Key Features","text":"<ul> <li>Modularized - Containers (and their files) are grouped into \"environments\" &amp; \"stacks\"</li> <li>Organized - Stacks display and are controllable in Docker Desktop, Portainer, and other docker GUI management tools</li> <li>Easy to configure - When composing an environment, simply add/remove your \"stack\" name from stacks.txt to include/exclude a stack from being managed</li> <li>Easy to manage - Simply call a single script to build, teardown, start, stop, pause, etc individual or all environments and or stacks</li> <li>Security - Separates secrets from compose and environment files</li> <li>Privacy - Only allow git to see files you specify (useful only if you git push to a repo)</li> <li>Documented - Automatically documented - check out the documentation site</li> </ul>"},{"location":"my_approach/#how-to-use","title":"How To Use","text":"<p>Use <code>/tools/compose.sh</code> to perform any docker compose action (ex. up, down, start, restart, etc) on an environment, its stacks, and or its stack items</p> <p>Some example commands</p> Purpose Example Command compose <code>up</code> all stacks in <code>production</code> environment <code>compose.sh production up</code> compose <code>up</code> the <code>writing</code> stack in <code>production</code> environment <code>compose.sh production.writing up</code> compose <code>up</code> <code>ghost</code> in the <code>writing</code> stack in <code>production</code> environment <code>compose.sh production.writing.ghost up</code> <p>The examples above used the action <code>up</code> but you can use any docker compose action (ex. up, down, start, restart, etc).</p> <p>For example, to <code>restart</code> all containers in the <code>production</code> environment <code>writing</code> stack:</p> <pre><code>/tools/compose.sh production.writing restart\n</code></pre> <p>You can also use the custom action <code>rebuild</code> to compose <code>down</code> and <code>up</code>. For example, to compose <code>down</code> and <code>up</code> all containers in the <code>production</code> environment <code>writing</code> stack:</p> <pre><code>/tools/compose.sh production.writing rebuild\n</code></pre>"},{"location":"my_approach/#prerequisites","title":"Prerequisites","text":"<ul> <li>docker</li> <li>docker compose</li> <li>make <code>.sh</code> files in <code>/tools</code> executable</li> <li>ex. <code>chmod +x tools/*.sh</code></li> </ul>"},{"location":"my_approach/#configuration","title":"Configuration","text":"<ol> <li>create your desired environment and optional environment .env</li> </ol> <p>ex.    <code>/environments/production</code> <code>/environments/production/.env</code></p> <ol> <li>create any stacks and optional stack .env</li> </ol> <p>ex.    <code>/environments/production/writing</code> <code>/environments/production/writing/.env</code></p> <ol> <li>optionally create and fill a stacks.txt (with ordered stack names, only used by <code>tools/compose.sh</code> when composing an entire environment)</li> </ol> <p>ex.    <code>/environments/production/stacks.txt</code></p> <ol> <li>create a compose file, optional environment file, and optional secrets file per container</li> </ol> <p>ex.    <code>/environments/production/writing/ghost.yml</code> <code>/environments/production/writing/ghost.env</code> <code>/environments/production/writing/ghost.secrets</code></p> <ol> <li>optionally, include any files you want git to see in <code>/.gitignore</code></li> </ol>"},{"location":"my_approach/#compose-files","title":"compose files","text":"<p>To make my compose files more readable (and smaller in size / line count), I place commonly repeated lines in <code>/environments/common-services.yml</code> and reference with an <code>extends</code> keyword.</p>"},{"location":"my_approach/#env-and-secrets","title":".env and .secrets","text":"<p><code>.env</code> and <code>.secrets</code> are both environment files where <code>.env</code>stores non-sensitive data (ex. timezone) and <code>.secrets</code> stores sensitive data (ex. password).</p> <p>You can have overlapping key names which are resolved in the following order (from most to least precendence):</p> <ul> <li>item .secrets (ex. <code>/environments/production/writing/ghost.secrets</code>)</li> <li>item .env (ex. <code>/environments/production/writing/ghost.env</code>)</li> <li>stack .env (ex. <code>/environments/production/writing/.env</code>)</li> <li>environment .env (ex. <code>/environments/production/.env</code>)</li> <li>environments .env (ex. <code>/environments/.env</code>)</li> </ul>"},{"location":"my_approach/#variable-substitution","title":"Variable Substitution","text":"<p><code>/tools/compose.sh</code> will dynamically replace referenced variables in <code>.env</code> and <code>.secrets</code>. For example, let's say this is your environment <code>.env</code> file:</p> <pre><code>NETWORK_HOST=192.168.1.200\n</code></pre> <p>And <code>media/something.env</code> contains:</p> <pre><code>SOMETHING_URL=http://${NETWORK_HOST}:9999\n</code></pre> <p>The final environment variables used to compose would be:</p> <pre><code>NETWORK_HOST=192.168.1.200\nSOMETHING_URL=http://192.168.1.200:9999\n</code></pre>"},{"location":"my_approach/#example-secrets","title":"Example Secrets","text":"<p><code>/tools/compose.sh</code> will automatically create a copy of every <code>.secrets</code> file, clear out the values (leaving key names), and add a <code>.example</code> extension. If you include these files in your <code>/.gitignore</code>, they can help others understand what secret variables are required without seeing your secret values.</p>"},{"location":"my_approach/#stackstxt","title":"stacks.txt","text":"<p><code>stacks.txt</code> is a filter for <code>/tools/compose.sh</code> when composing an environment. Normally, all stacks will be processed in alphabetical order when composing an environment (ex. <code>compose.sh production up</code>, <code>compose.sh production down</code>, <code>compose.sh production restart</code>, etc).</p> <p>But if you have a non-empty <code>stacks.txt</code> with valid stack names (1 per line), each stack will be composed in the ordered specified.</p>"},{"location":"my_approach/#troubleshooting","title":"Troubleshooting","text":""},{"location":"my_approach/#traefik-not-serving-ssl-certs","title":"Traefik not serving SSL certs","text":"<p>Probably need to chmod 600 acme.json</p>"},{"location":"my_approach/#s6-overlay-suexec-fatal-can-only-run-as-pid-1","title":"s6-overlay-suexec: fatal: can only run as pid 1","text":"<p>if you see the error below and use <code>/environments/common-services.yml</code>, set the extends service to <code>base</code> or <code>with_networks</code></p> <pre><code>s6-overlay-suexec: fatal: can only run as pid 1\n</code></pre>"},{"location":"environments/","title":"Overview","text":"EnvironmentContainersDemo23Example3"},{"location":"environments/#common-servicesyml","title":"common-services.yml","text":"<p>Common docker compose configurations that are imported using the <code>extends</code> keyword. <pre><code>services:\n  #- use when you 1) cannot use init and 2) cannot use standard networks\n  base: &amp;base\n    image: .\n    environment:\n      - PGID=${PGID}\n      - PUID=${PUID}\n      - TZ=${TZ}\n    restart: unless-stopped\n\n  #- use when you 1) can use init and 2) cannot use standard networks\n  base_init:\n    &lt;&lt;: *base\n    init: true\n\n  #- use when you 1) cannot use init and 2) can use standard networks\n  with_networks: &amp;with_networks\n    &lt;&lt;: *base\n    networks:\n      - t2_proxy\n      - socket_proxy\n\n  #- use when you 1) can use init and 2) can use standard networks\n  init_with_networks:\n    &lt;&lt;: *with_networks\n    init: true\n</code></pre> View Source: /environments/common-services.yml</p>"},{"location":"environments/#env","title":".env","text":"<p>Environment variables that apply to all environments. <pre><code>PUID=1000\nPGID=1000\nTZ=America/New_York\n</code></pre> View Source: /environments/.env</p>"},{"location":"environments/demo/","title":"Overview","text":"<p>An assortment of containers for demonstrative purposes.</p>"},{"location":"environments/demo/#hardware","title":"Hardware","text":"<ul> <li>Raspberry Pi 4b</li> </ul> <p>Note: Given the limited hardware, I do not run all containers at the same time.</p>"},{"location":"environments/demo/#containers","title":"Containers","text":"stackcontainerdescriptioncollaborationwikijsself-hostingsocket-proxyself-hostingfail2bannetworkingadguardhomeothernode-redotherwhoogleotherlinkdingotherhome-assistantothervaultwardenbloggingghostdashboardshomerdashboardshomepagedashboardsheimdalldashboardsflamedashboardsorganizrdashboardshomarrcodingcode-servercodinggiteamonitoringglancesmonitoringuptime-kumamediaimmichmediametubemediatube-archivist"},{"location":"environments/demo/blogging/ghost/","title":"ghost","text":""},{"location":"environments/demo/blogging/ghost/#containers","title":"Containers","text":""},{"location":"environments/demo/blogging/ghost/#ghost_1","title":"ghost","text":""},{"location":"environments/demo/blogging/ghost/#ghost-db","title":"ghost-db","text":""},{"location":"environments/demo/blogging/ghost/#ghost-dbyml","title":"ghost-db.yml","text":"<p>Primary docker compose file for ghost-db <pre><code>version: \"3.9\"\nnetworks:\nt2_proxy:\nname: t2_proxy\nexternal: true\nsocket_proxy:\nname: socket_proxy\nexternal: true\nservices:\n# https://github.com/TryGhost/Ghost\nghost:\nextends:\nfile: ../../common-services.yml\nservice: init_with_networks\nimage: ghost:latest\ncontainer_name: ghost-server\nhostname: ghost-server\nenvironment:\ndatabase__client: mysql\ndatabase__connection__host: ghost-db\ndatabase__connection__user: root\ndatabase__connection__password: ${GHOST_DB_ROOT_PASSWORD}\ndatabase__connection__database: ghost\nurl: ${GHOST_HOMEPAGE_URL}\nvolumes:\n- ./data/ghost/content:/var/lib/ghost/content\ndepends_on:\n- ghost-db\nlabels:\n- homepage.group=Blogging\n- homepage.name=Ghost\n- homepage.icon=ghost.png\n- homepage.href=$GHOST_HOMEPAGE_URL\n- homepage.ping=$GHOST_HOMEPAGE_PING\n- homepage.description=$GHOST_HOMEPAGE_DESCRIPTION\n- homepage.hideErrors=true\n- homepage.showStats=true\nghost-db:\nextends:\nfile: ../../common-services.yml\nservice: init_with_networks\nimage: mysql:8.0\ncontainer_name: ghost-db\nhostname: ghost-db\nvolumes:\n- ./data/ghost/db/data:/var/lib/mysql\n- ./data/ghost/db/my.cnf:/etc/mysql/conf.d/my.cnf\n- ./data/ghost/db/sql:/docker-entrypoint-initdb.d\nenvironment:\nMYSQL_ROOT_PASSWORD: ${GHOST_DB_ROOT_PASSWORD}\n</code></pre> View Source: /environments/demo/blogging/ghost.yml</p>"},{"location":"environments/demo/blogging/ghost/#ghost-dbenv","title":"ghost-db.env","text":"<p>Primary environment file for ghost-db <pre><code>GHOST_HOMEPAGE_DESCRIPTION=Turn your audience into a business. Publishing, memberships, subscriptions and newsletters.\nGHOST_HOMEPAGE_URL=http://${NETWORK_HOST}:${GHOST_HTTP_PORT}\nGHOST_HOMEPAGE_PING=http://${NETWORK_HOST}:${GHOST_HTTP_PORT}\n</code></pre> View Source: /environments/demo/blogging/ghost.env</p>"},{"location":"environments/demo/blogging/ghost/#ghost-dbsecrets","title":"ghost-db.secrets","text":"<p>Primary secrets file for ghost-db <pre><code>GHOST_DB_ROOT_PASSWORD=\n</code></pre> View Source: /environments/demo/blogging/ghost.secrets.example</p>"},{"location":"environments/demo/coding/code-server/","title":"code-server","text":""},{"location":"environments/demo/coding/code-server/#containers","title":"Containers","text":""},{"location":"environments/demo/coding/code-server/#code-server_1","title":"code-server","text":""},{"location":"environments/demo/coding/code-server/#code-serveryml","title":"code-server.yml","text":"<p>Primary docker compose file for code-server <pre><code>version: \"3.9\"\nnetworks:\nt2_proxy:\nname: t2_proxy\nexternal: true\nsocket_proxy:\nname: socket_proxy\nexternal: true\nservices:\n# https://github.com/coder/code-server\ncode-server:\nextends:\nfile: ../../common-services.yml\nservice: with_networks\nimage: lscr.io/linuxserver/code-server:latest\ncontainer_name: code-server\nhostname: code-server\nprivileged: false\nports:\n- ${CODESERVER_HTTP_PORT}:8080\n- ${CODESERVER_HTTPS_PORT}:8443\nenvironment:\n- SUDO_PASSWORD=${CODESERVER_PASSWORD}\n- DEFAULT_WORKSPACE=/docker\nvolumes:\n- ./data/codeserver/config:/config:rw\n- /home/${CODESERVER_DOCKER_USER}/docker:/docker:rw\nlabels:\n- homepage.group=Coding\n- homepage.name=Code Server\n- homepage.icon=code-server.png\n- homepage.href=$CODESERVER_HOMEPAGE_URL\n- homepage.ping=$CODESERVER_HOMEPAGE_PING\n- homepage.description=$CODESERVER_HOMEPAGE_DESCRIPTION\n- homepage.hideErrors=true\n- homepage.showStats=true    </code></pre> View Source: /environments/demo/coding/code-server.yml</p>"},{"location":"environments/demo/coding/code-server/#code-serverenv","title":"code-server.env","text":"<p>Primary environment file for code-server <pre><code>CODESERVER_HOMEPAGE_DESCRIPTION=VS Code in the browser\nCODESERVER_HOMEPAGE_URL=http://${NETWORK_HOST}:${CODESERVER_HTTPS_PORT}\nCODESERVER_HOMEPAGE_PING=http://${NETWORK_HOST}:${CODESERVER_HTTPS_PORT}\n</code></pre> View Source: /environments/demo/coding/code-server.env</p>"},{"location":"environments/demo/coding/code-server/#code-serversecrets","title":"code-server.secrets","text":"<p>Primary secrets file for code-server <pre><code>CODESERVER_DOCKER_USER=\nCODESERVER_PASSWORD=\n</code></pre> View Source: /environments/demo/coding/code-server.secrets.example</p>"},{"location":"environments/demo/coding/gitea/","title":"gitea","text":""},{"location":"environments/demo/coding/gitea/#containers","title":"Containers","text":""},{"location":"environments/demo/coding/gitea/#gitea_1","title":"gitea","text":""},{"location":"environments/demo/coding/gitea/#giteayml","title":"gitea.yml","text":"<p>Primary docker compose file for gitea <pre><code>version: \"3.9\"\nnetworks:\nt2_proxy:\nname: t2_proxy\nexternal: true\nsocket_proxy:\nname: socket_proxy\nexternal: true\nservices:\n# https://github.com/go-gitea/gitea\ngitea:\nextends:\nfile: ../../common-services.yml\nservice: init_with_networks\n#image: gitea/gitea:latest\nimage: kunde21/gitea-arm:latest # works with raspberry pi\ncontainer_name: gitea\nhostname: gitea\nports:\n- ${GITEA_SSH_PORT}:22/tcp\n- ${GITEA_HTTP_PORT}:3000/tcp\nvolumes:\n- ./data/gitea/data:/data:rw\nlabels:\n- homepage.group=Coding\n- homepage.name=Gitea\n- homepage.icon=gitea.png\n- homepage.href=$GITEA_HOMEPAGE_URL\n- homepage.ping=$GITEA_HOMEPAGE_PING\n- homepage.description=$GITEA_HOMEPAGE_DESCRIPTION\n- homepage.hideErrors=true\n- homepage.showStats=true    </code></pre> View Source: /environments/demo/coding/gitea.yml</p>"},{"location":"environments/demo/coding/gitea/#giteaenv","title":"gitea.env","text":"<p>Primary environment file for gitea <pre><code>GITEA_HOMEPAGE_DESCRIPTION=Git with a cup of tea! Painless self-hosted all-in-one software development service, includes Git hosting, code review, team collaboration, package registry and CI/CD\nGITEA_HOMEPAGE_URL=http://${NETWORK_HOST}:${GITEA_HTTP_PORT}\nGITEA_HOMEPAGE_PING=http://${NETWORK_HOST}:${GITEA_HTTP_PORT}\n</code></pre> View Source: /environments/demo/coding/gitea.env</p>"},{"location":"environments/demo/collaboration/wikijs/","title":"wikijs","text":""},{"location":"environments/demo/collaboration/wikijs/#containers","title":"Containers","text":""},{"location":"environments/demo/collaboration/wikijs/#wikijs-db","title":"wikijs-db","text":""},{"location":"environments/demo/collaboration/wikijs/#wikijs_1","title":"wikijs","text":""},{"location":"environments/demo/collaboration/wikijs/#wikijsyml","title":"wikijs.yml","text":"<p>Primary docker compose file for wikijs <pre><code>version: \"3.9\"\nnetworks:\nt2_proxy:\nname: t2_proxy\nexternal: true\nsocket_proxy:\nname: socket_proxy\nexternal: true\nservices:\nwikijs-db:\nimage: postgres:11-alpine\nextends:\nfile: ../../common-services.yml\nservice: init_with_networks\ncontainer_name: wikijs-db\nhostname: wikijs-db\nenvironment:\nPOSTGRES_DB: ${WIKIJS_POSTGRES_DB}\nPOSTGRES_PASSWORD: ${WIKIJS_POSTGRES_PASSWORD}\nPOSTGRES_USER: ${WIKIJS_POSTGRES_USER}\nlogging:\ndriver: \"none\"\nvolumes:\n- ./data/wikijs/db:/var/lib/postgresql/data\nwikijs:\nimage: ghcr.io/requarks/wiki:2\nextends:\nfile: ../../common-services.yml\nservice: init_with_networks\ncontainer_name: wikijs\nhostname: wikijs\ndepends_on:\n- wikijs-db\nenvironment:\nDB_TYPE: postgres\nDB_HOST: wikijs-db\nDB_PORT: 5432\nDB_USER: ${WIKIJS_POSTGRES_USER}\nDB_PASS: ${WIKIJS_POSTGRES_PASSWORD}\nDB_NAME: ${WIKIJS_POSTGRES_DB}\nports:\n- ${WIKIJS_PORT}:3000\nlabels:\n# - \"traefik.enable=true\"\n# - \"traefik.http.routers.wikijs-rtr.entrypoints=https\"\n# - \"traefik.http.routers.wikijs-rtr.rule=Host(`wiki.${DOMAINNAME_CLOUD_SERVER}`)\"\n# - \"traefik.http.routers.wikijs-rtr.tls=true\"\n# - \"traefik.http.routers.wikijs-rtr.middlewares=chain-no-auth@file\"\n# - \"traefik.http.routers.wikijs-rtr.service=wikijs-svc\"\n# - \"traefik.http.services.wikijs-svc.loadbalancer.server.port=3000\"\n- homepage.group=Collaboration\n- homepage.name=Wiki.js\n- homepage.icon=/icons/wikijs.png\n- homepage.href=$WIKIJS_HOMEPAGE_URL\n# - homepage.ping=$WIKIJS_HOMEPAGE_PING\n- homepage.description=$WIKIJS_HOMEPAGE_DESCRIPTION\n- homepage.hideErrors=true\n- homepage.showStats=false\n</code></pre> View Source: /environments/demo/collaboration/wikijs.yml</p>"},{"location":"environments/demo/collaboration/wikijs/#wikijsenv","title":"wikijs.env","text":"<p>Primary environment file for wikijs <pre><code>WIKIJS_HOMEPAGE_DESCRIPTION=\nWIKIJS_DB_HOMEPAGE_DESCRIPTION=\nWIKIJS_PORT=3010\nWIKIJS_HOMEPAGE_URL=http://${NETWORK_HOST}:3010\nWIKIJS_HOMEPAGE_PING=http://${NETWORK_HOST}:3010\n</code></pre> View Source: /environments/demo/collaboration/wikijs.env</p>"},{"location":"environments/demo/collaboration/wikijs/#wikijssecrets","title":"wikijs.secrets","text":"<p>Primary secrets file for wikijs <pre><code>WIKIJS_POSTGRES_DB=\nWIKIJS_POSTGRES_PASSWORD=\nWIKIJS_POSTGRES_USER=\n</code></pre> View Source: /environments/demo/collaboration/wikijs.secrets.example</p>"},{"location":"environments/demo/dashboards/flame/","title":"flame","text":""},{"location":"environments/demo/dashboards/flame/#containers","title":"Containers","text":""},{"location":"environments/demo/dashboards/flame/#flame_1","title":"flame","text":""},{"location":"environments/demo/dashboards/flame/#flameyml","title":"flame.yml","text":"<p>Primary docker compose file for flame <pre><code>version: \"3.9\"\nnetworks:\nt2_proxy:\nname: t2_proxy\nexternal: true\nsocket_proxy:\nname: socket_proxy\nexternal: true\nservices:\n# https://github.com/pawelmalak/flame\nflame:\nextends:\nfile: ../../common-services.yml\nservice: init_with_networks   # image: pawelmalak/flame\nimage: pawelmalak/flame:multiarch # raspberry pi\ncontainer_name: flame\nhostname: flame\nvolumes:\n- ./data/flame/data:/app/data\n- /var/run/docker.sock:/var/run/docker.sock # optional but required for Docker integration\nports:\n- ${FLAME_HTTP_PORT}:5005\nenvironment:\n- PASSWORD=${FLAME_PASSWORD}\nlabels:\n- homepage.group=Dashboards\n- homepage.name=Flame\n- homepage.icon=flame.png\n- homepage.href=$FLAME_HOMEPAGE_URL\n- homepage.ping=$FLAME_HOMEPAGE_PING\n- homepage.description=$FLAME_HOMEPAGE_DESCRIPTION\n- homepage.hideErrors=true\n- homepage.showStats=true\n</code></pre> View Source: /environments/demo/dashboards/flame.yml</p>"},{"location":"environments/demo/dashboards/flame/#flameenv","title":"flame.env","text":"<p>Primary environment file for flame <pre><code>FLAME_HOMEPAGE_DESCRIPTION=Flame is self-hosted startpage for your server. Easily manage your apps and bookmarks with built-in editors.\nFLAME_HOMEPAGE_URL=http://${NETWORK_HOST}:${FLAME_HTTP_PORT}\nFLAME_HOMEPAGE_PING=http://${NETWORK_HOST}:${FLAME_HTTP_PORT}\n</code></pre> View Source: /environments/demo/dashboards/flame.env</p>"},{"location":"environments/demo/dashboards/flame/#flamesecrets","title":"flame.secrets","text":"<p>Primary secrets file for flame <pre><code>FLAME_PASSWORD=\n</code></pre> View Source: /environments/demo/dashboards/flame.secrets.example</p>"},{"location":"environments/demo/dashboards/heimdall/","title":"heimdall","text":""},{"location":"environments/demo/dashboards/heimdall/#containers","title":"Containers","text":""},{"location":"environments/demo/dashboards/heimdall/#heimdall_1","title":"heimdall","text":""},{"location":"environments/demo/dashboards/heimdall/#heimdallyml","title":"heimdall.yml","text":"<p>Primary docker compose file for heimdall <pre><code>version: \"3.9\"\nnetworks:\nt2_proxy:\nname: t2_proxy\nexternal: true\nsocket_proxy:\nname: socket_proxy\nexternal: true\nservices:\n# https://github.com/linuxserver/Heimdall\n# https://hub.docker.com/r/linuxserver/heimdall/\nheimdall:\nextends:\nfile: ../../common-services.yml\nservice: with_networks\nimage: linuxserver/heimdall:latest\ncontainer_name: heimdall\nhostname: heimdall\nports:\n- ${HEIMDALL_HTTP_PORT}:80\nvolumes:\n- ./data/heimdall/config:/config:rw\nlabels:\n- homepage.group=Dashboards\n- homepage.name=Heimdall\n- homepage.icon=heimdall.png\n- homepage.href=$HEIMDALL_HOMEPAGE_URL\n- homepage.ping=$HEIMDALL_HOMEPAGE_PING\n- homepage.description=$HEIMDALL_HOMEPAGE_DESCRIPTION\n- homepage.hideErrors=true\n- homepage.showStats=true\n</code></pre> View Source: /environments/demo/dashboards/heimdall.yml</p>"},{"location":"environments/demo/dashboards/heimdall/#heimdallenv","title":"heimdall.env","text":"<p>Primary environment file for heimdall <pre><code>HEIMDALL_HOMEPAGE_DESCRIPTION=An Application dashboard and launcher\nHEIMDALL_HOMEPAGE_URL=http://${NETWORK_HOST}:${HEIMDALL_HTTP_PORT}\nHEIMDALL_HOMEPAGE_PING=http://${NETWORK_HOST}:${HEIMDALL_HTTP_PORT}\n</code></pre> View Source: /environments/demo/dashboards/heimdall.env</p>"},{"location":"environments/demo/dashboards/homarr/","title":"homarr","text":""},{"location":"environments/demo/dashboards/homarr/#containers","title":"Containers","text":""},{"location":"environments/demo/dashboards/homarr/#homarr_1","title":"homarr","text":""},{"location":"environments/demo/dashboards/homarr/#homarryml","title":"homarr.yml","text":"<p>Primary docker compose file for homarr <pre><code>version: \"3.9\"\nnetworks:\nt2_proxy:\nname: t2_proxy\nexternal: true\nsocket_proxy:\nname: socket_proxy\nexternal: true\nservices:\n# https://github.com/ajnart/homarr\nhomarr:\nextends:\nfile: ../../common-services.yml\nservice: init_with_networks  image: ghcr.io/ajnart/homarr:latest\ncontainer_name: homarr\nhostname: homarr\nvolumes:\n- ./data/homarr/configs:/app/data/configs\n- ./data/homarr/icons:/app/public/icons\nports:\n- ${HOMARR_HTTP_PORT}:7575   labels:\n- homepage.group=Dashboards\n- homepage.name=Homarr\n- homepage.icon=homarr.png\n- homepage.href=$HOMARR_HOMEPAGE_URL\n- homepage.ping=$HOMARR_HOMEPAGE_PING\n- homepage.description=$HOMARR_HOMEPAGE_DESCRIPTION\n- homepage.hideErrors=true\n- homepage.showStats=true\n</code></pre> View Source: /environments/demo/dashboards/homarr.yml</p>"},{"location":"environments/demo/dashboards/homarr/#homarrenv","title":"homarr.env","text":"<p>Primary environment file for homarr <pre><code>HOMARR_HOMEPAGE_DESCRIPTION=Customizable browser's home page to interact with your homeserver's Docker containers (e.g. Sonarr/Radarr)\nHOMARR_HOMEPAGE_URL=http://${NETWORK_HOST}:${HOMARR_HTTP_PORT}\nHOMARR_HOMEPAGE_PING=http://${NETWORK_HOST}:${HOMARR_HTTP_PORT}\n</code></pre> View Source: /environments/demo/dashboards/homarr.env</p>"},{"location":"environments/demo/dashboards/homepage/","title":"homepage","text":""},{"location":"environments/demo/dashboards/homepage/#containers","title":"Containers","text":""},{"location":"environments/demo/dashboards/homepage/#homepage_1","title":"homepage","text":""},{"location":"environments/demo/dashboards/homepage/#homepageyml","title":"homepage.yml","text":"<p>Primary docker compose file for homepage <pre><code>version: \"3.9\"\nnetworks:\nt2_proxy:\nname: t2_proxy\nexternal: true\nsocket_proxy:\nname: socket_proxy\nexternal: true\nservices:\n# https://github.com/benphelps/homepage\nhomepage:\nextends:\nfile: ../../common-services.yml\nservice: init_with_networks\nimage: ghcr.io/benphelps/homepage:latest\ncontainer_name: homepage\nhostname: homepage\nports:\n- ${HOMEPAGE_HTTP_PORT}:3000\nvolumes:\n- ./data/homepage/config:/app/config\n- ./data/homepage/icons:/app/public/icons\n- ./data/homepage/images:/app/public/images\nlabels:\n- homepage.group=Dashboards\n- homepage.name=Homepage\n- homepage.icon=homepage.png\n- homepage.href=$HOMEPAGE_HOMEPAGE_URL\n- homepage.ping=$HOMEPAGE_HOMEPAGE_PING\n- homepage.description=$HOMEPAGE_HOMEPAGE_DESCRIPTION\n- homepage.hideErrors=true\n- homepage.showStats=true\n</code></pre> View Source: /environments/demo/dashboards/homepage.yml</p>"},{"location":"environments/demo/dashboards/homepage/#homepageenv","title":"homepage.env","text":"<p>Primary environment file for homepage <pre><code>HOMEPAGE_HOMEPAGE_DESCRIPTION=A highly customizable homepage (or startpage / application dashboard) with Docker and service API integrations.\nHOMEPAGE_HOMEPAGE_URL=http://${NETWORK_HOST}:${HOMEPAGE_HTTP_PORT}\nHOMEPAGE_HOMEPAGE_PING=http://${NETWORK_HOST}:${HOMEPAGE_HTTP_PORT}\n</code></pre> View Source: /environments/demo/dashboards/homepage.env</p>"},{"location":"environments/demo/dashboards/homer/","title":"homer","text":""},{"location":"environments/demo/dashboards/homer/#containers","title":"Containers","text":""},{"location":"environments/demo/dashboards/homer/#homer_1","title":"homer","text":""},{"location":"environments/demo/dashboards/homer/#homeryml","title":"homer.yml","text":"<p>Primary docker compose file for homer <pre><code>version: \"3.9\"\nnetworks:\nt2_proxy:\nname: t2_proxy\nexternal: true\nsocket_proxy:\nname: socket_proxy\nexternal: true\nservices:\n# https://github.com/linuxserver/Heimdall\nhomer:\nextends:\nfile: ../../common-services.yml\nservice: init_with_networks  image: b4bz/homer\ncontainer_name: homer\nhostname: homer\nvolumes:\n- ./data/homer/assets/:/www/assets\nports:\n- ${HOMER_HTTP_PORT}:8080   environment:\n- INIT_ASSETS=0\nlabels:\n- homepage.group=Dashboards\n- homepage.name=Homer\n- homepage.icon=homer.png\n- homepage.href=$HOMER_HOMEPAGE_URL\n- homepage.ping=$HOMER_HOMEPAGE_PING\n- homepage.description=$HOMER_HOMEPAGE_DESCRIPTION\n- homepage.hideErrors=true\n- homepage.showStats=true\n</code></pre> View Source: /environments/demo/dashboards/homer.yml</p>"},{"location":"environments/demo/dashboards/homer/#homerenv","title":"homer.env","text":"<p>Primary environment file for homer <pre><code>HOMER_HOMEPAGE_DESCRIPTION=A very simple static homepage for your server.\nHOMER_HOMEPAGE_URL=http://${NETWORK_HOST}:${HOMER_HTTP_PORT}\nHOMER_HOMEPAGE_PING=http://${NETWORK_HOST}:${HOMER_HTTP_PORT}\n</code></pre> View Source: /environments/demo/dashboards/homer.env</p>"},{"location":"environments/demo/dashboards/organizr/","title":"organizr","text":""},{"location":"environments/demo/dashboards/organizr/#containers","title":"Containers","text":""},{"location":"environments/demo/dashboards/organizr/#organizr_1","title":"organizr","text":""},{"location":"environments/demo/dashboards/organizr/#organizryml","title":"organizr.yml","text":"<p>Primary docker compose file for organizr <pre><code>version: \"3.9\"\nnetworks:\nt2_proxy:\nname: t2_proxy\nexternal: true\nsocket_proxy:\nname: socket_proxy\nexternal: true\nservices:\n# https://github.com/go-ORGANIZR/ORGANIZR\norganizr:\nextends:\nfile: ../../common-services.yml\nservice: init_with_networks\nimage: organizr/organizr\ncontainer_name: organizr\nhostname: organizr\nports:\n- ${ORGANIZR_HTTP_PORT}:80\nvolumes:\n- ./data/organizr/config:/config:rw\nlabels:\n- homepage.group=Dashboards\n- homepage.name=Organizr\n- homepage.icon=organizr.png\n- homepage.href=$ORGANIZR_HOMEPAGE_URL\n- homepage.ping=$ORGANIZR_HOMEPAGE_PING\n- homepage.description=$ORGANIZR_HOMEPAGE_DESCRIPTION\n- homepage.hideErrors=true\n- homepage.showStats=true\n</code></pre> View Source: /environments/demo/dashboards/organizr.yml</p>"},{"location":"environments/demo/dashboards/organizr/#organizrenv","title":"organizr.env","text":"<p>Primary environment file for organizr <pre><code>ORGANIZR_HOMEPAGE_DESCRIPTION=HTPC/Homelab Services Organizer - Written in PHP\nORGANIZR_HOMEPAGE_URL=http://${NETWORK_HOST}:${ORGANIZR_HTTP_PORT}\nORGANIZR_HOMEPAGE_PING=http://${NETWORK_HOST}:${ORGANIZR_HTTP_PORT}\n</code></pre> View Source: /environments/demo/dashboards/organizr.env</p>"},{"location":"environments/demo/media/immich/","title":"immich","text":""},{"location":"environments/demo/media/immich/#containers","title":"Containers","text":""},{"location":"environments/demo/media/immich/#immich-server","title":"immich-server","text":""},{"location":"environments/demo/media/immich/#immich-microservices","title":"immich-microservices","text":""},{"location":"environments/demo/media/immich/#immich-machine-learning","title":"immich-machine-learning","text":""},{"location":"environments/demo/media/immich/#immich-web","title":"immich-web","text":""},{"location":"environments/demo/media/immich/#typesense","title":"typesense","text":""},{"location":"environments/demo/media/immich/#redis","title":"redis","text":""},{"location":"environments/demo/media/immich/#database","title":"database","text":""},{"location":"environments/demo/media/immich/#immich-proxy","title":"immich-proxy","text":""},{"location":"environments/demo/media/immich/#immich-proxyyml","title":"immich-proxy.yml","text":"<p>Primary docker compose file for immich-proxy <pre><code>version: \"3.8\"\nservices:\n# https://github.com/immich-app/immich\nimmich-server:\ncontainer_name: immich_server\nimage: ghcr.io/immich-app/immich-server:${IMMICH_VERSION:-release}\ncommand: [\"start-server.sh\"]\nvolumes:\n- ${UPLOAD_LOCATION}:/usr/src/app/upload\nenv_file:\n- .env\ndepends_on:\n- redis\n- database\n- typesense\nrestart: always\nimmich-microservices:\ncontainer_name: immich_microservices\nimage: ghcr.io/immich-app/immich-server:${IMMICH_VERSION:-release}\ncommand: [\"start-microservices.sh\"]\nvolumes:\n- ${UPLOAD_LOCATION}:/usr/src/app/upload\nenv_file:\n- .env\ndepends_on:\n- redis\n- database\n- typesense\nrestart: always\nimmich-machine-learning:\ncontainer_name: immich_machine_learning\nimage: ghcr.io/immich-app/immich-machine-learning:${IMMICH_VERSION:-release}\nvolumes:\n- ${UPLOAD_LOCATION}:/usr/src/app/upload\n- model-cache:/cache\nenv_file:\n- .env\nrestart: always\nimmich-web:\ncontainer_name: immich_web\nimage: ghcr.io/immich-app/immich-web:${IMMICH_VERSION:-release}\nenv_file:\n- .env\nrestart: always\ntypesense:\ncontainer_name: immich_typesense\nimage: typesense/typesense:0.24.0\nenvironment:\n- TYPESENSE_API_KEY=${TYPESENSE_API_KEY}\n- TYPESENSE_DATA_DIR=/data\nlogging:\ndriver: none\nvolumes:\n- tsdata:/data\nrestart: always\nredis:\ncontainer_name: immich_redis\nimage: redis:6.2\nrestart: always\ndatabase:\ncontainer_name: immich_postgres\nimage: postgres:14\nenv_file:\n- .env\nenvironment:\nPOSTGRES_PASSWORD: ${DB_PASSWORD}\nPOSTGRES_USER: ${DB_USERNAME}\nPOSTGRES_DB: ${DB_DATABASE_NAME}\nPG_DATA: /var/lib/postgresql/data\nvolumes:\n- pgdata:/var/lib/postgresql/data\nrestart: always\nimmich-proxy:\ncontainer_name: immich_proxy\nimage: ghcr.io/immich-app/immich-proxy:${IMMICH_VERSION:-release}\nenvironment:\n# Make sure these values get passed through from the env file\n- IMMICH_SERVER_URL\n- IMMICH_WEB_URL\nports:\n- 2283:8080\ndepends_on:\n- immich-server\nrestart: always\nvolumes:\npgdata:\nmodel-cache:\ntsdata:\n</code></pre> View Source: /environments/demo/media/immich.yml</p>"},{"location":"environments/demo/media/immich/#immich-proxyenv","title":"immich-proxy.env","text":"<p>Primary environment file for immich-proxy <pre><code>IMMICH_HOMEPAGE_DESCRIPTION=Self-hosted photo and video backup solution directly from your mobile phone.\nIMMICH_HOMEPAGE_URL=http://${NETWORK_HOST}:${IMMICH_HTTP_PORT}\nIMMICH_HOMEPAGE_PING=http://metube:${IMMICH_HTTP_PORT}\n###################################################################################\n# Database\n###################################################################################\n# NOTE: The following four database variables support Docker secrets by adding a *_FILE suffix to the variable name\n# See the docker-compose documentation on secrets for additional details: https://docs.docker.com/compose/compose-file/compose-file-v3/#secrets\nDB_HOSTNAME=immich_postgres\nDB_USERNAME=postgres\nDB_PASSWORD=postgres\nDB_DATABASE_NAME=immich\n# Optional Database settings:\n# DB_PORT=5432\n###################################################################################\n# Redis\n###################################################################################\nREDIS_HOSTNAME=immich_redis\n# REDIS_URL will be used to pass custom options to ioredis.\n# Example for Sentinel\n# {\"sentinels\":[{\"host\":\"redis-sentinel-node-0\",\"port\":26379},{\"host\":\"redis-sentinel-node-1\",\"port\":26379},{\"host\":\"redis-sentinel-node-2\",\"port\":26379}],\"name\":\"redis-sentinel\"}\n# REDIS_URL=ioredis://eyJzZW50aW5lbHMiOlt7Imhvc3QiOiJyZWRpcy1zZW50aW5lbDEiLCJwb3J0IjoyNjM3OX0seyJob3N0IjoicmVkaXMtc2VudGluZWwyIiwicG9ydCI6MjYzNzl9XSwibmFtZSI6Im15bWFzdGVyIn0=\n# Optional Redis settings:\n# Note: these parameters are not automatically passed to the Redis Container\n# to do so, please edit the docker-compose.yml file as well. Redis is not configured\n# via environment variables, only redis.conf or the command line\n# REDIS_PORT=6379\n# REDIS_DBINDEX=0\n# REDIS_USERNAME=\n# REDIS_PASSWORD=\n# REDIS_SOCKET=\n###################################################################################\n# Upload File Location\n#\n# This is the location where uploaded files are stored.\n###################################################################################\nUPLOAD_LOCATION=absolute_location_on_your_machine_where_you_want_to_store_the_backup\n###################################################################################\n# Typesense\n###################################################################################\nTYPESENSE_API_KEY=some-random-text\n# TYPESENSE_ENABLED=false\n# TYPESENSE_URL uses base64 encoding for the nodes json.\n# Example JSON that was used:\n# [\n#      { 'host': 'typesense-1.example.net', 'port': '443', 'protocol': 'https' },\n#      { 'host': 'typesense-2.example.net', 'port': '443', 'protocol': 'https' },\n#      { 'host': 'typesense-3.example.net', 'port': '443', 'protocol': 'https' },\n#  ]\n# TYPESENSE_URL=ha://WwogICAgeyAnaG9zdCc6ICd0eXBlc2Vuc2UtMS5leGFtcGxlLm5ldCcsICdwb3J0JzogJzQ0MycsICdwcm90b2NvbCc6ICdodHRwcycgfSwKICAgIHsgJ2hvc3QnOiAndHlwZXNlbnNlLTIuZXhhbXBsZS5uZXQnLCAncG9ydCc6ICc0NDMnLCAncHJvdG9jb2wnOiAnaHR0cHMnIH0sCiAgICB7ICdob3N0JzogJ3R5cGVzZW5zZS0zLmV4YW1wbGUubmV0JywgJ3BvcnQnOiAnNDQzJywgJ3Byb3RvY29sJzogJ2h0dHBzJyB9LApd\n###################################################################################\n# Reverse Geocoding\n#\n# Reverse geocoding is done locally which has a small impact on memory usage\n# This memory usage can be altered by changing the REVERSE_GEOCODING_PRECISION variable\n# This ranges from 0-3 with 3 being the most precise\n# 3 - Cities &gt; 500 population: ~200MB RAM\n# 2 - Cities &gt; 1000 population: ~150MB RAM\n# 1 - Cities &gt; 5000 population: ~80MB RAM\n# 0 - Cities &gt; 15000 population: ~40MB RAM\n####################################################################################\n# DISABLE_REVERSE_GEOCODING=false\n# REVERSE_GEOCODING_PRECISION=3\n####################################################################################\n# WEB - Optional\n#\n# Custom message on the login page, should be written in HTML form.\n# For example:\n# PUBLIC_LOGIN_PAGE_MESSAGE=\"This is a demo instance of Immich.&lt;br&gt;&lt;br&gt;Email: &lt;i&gt;demo@demo.de&lt;/i&gt;&lt;br&gt;Password: &lt;i&gt;demo&lt;/i&gt;\"\n####################################################################################\nPUBLIC_LOGIN_PAGE_MESSAGE=\n####################################################################################\n# Alternative Service Addresses - Optional\n#\n# This is an advanced feature for users who may be running their immich services on different hosts.\n# It will not change which address or port that services bind to within their containers, but it will change where other services look for their peers.\n# Note: immich-microservices is bound to 3002, but no references are made\n####################################################################################\nIMMICH_WEB_URL=http://immich-web:3000\nIMMICH_SERVER_URL=http://immich-server:3001\nIMMICH_MACHINE_LEARNING_URL=http://immich-machine-learning:3003\n####################################################################################\n# Alternative API's External Address - Optional\n#\n# This is an advanced feature used to control the public server endpoint returned to clients during Well-known discovery.\n# You should only use this if you want mobile apps to access the immich API over a custom URL. Do not include trailing slash.\n# NOTE: At this time, the web app will not be affected by this setting and will continue to use the relative path: /api\n# Examples: http://localhost:3001, http://immich-api.example.com, etc\n####################################################################################\n#IMMICH_API_URL_EXTERNAL=http://localhost:3001\n###################################################################################\n# Immich Version - Optional\n#\n# This allows all immich docker images to be pinned to a specific version. By default, \n# the version is \"release\" but could be a specific version, like \"v1.59.0\".\n###################################################################################\n#IMMICH_VERSION=\n</code></pre> View Source: /environments/demo/media/immich.env</p>"},{"location":"environments/demo/media/metube/","title":"metube","text":""},{"location":"environments/demo/media/metube/#containers","title":"Containers","text":""},{"location":"environments/demo/media/metube/#metube_1","title":"metube","text":""},{"location":"environments/demo/media/metube/#metubeyml","title":"metube.yml","text":"<p>Primary docker compose file for metube <pre><code>version: \"3.9\"\nnetworks:\nt2_proxy:\nname: t2_proxy\nexternal: true\nsocket_proxy:\nname: socket_proxy\nexternal: true\nservices:\n# https://github.com/alexta69/metube\nmetube:\nextends:\nfile: ../../common-services.yml\nservice: init_with_networks\nimage: ghcr.io/alexta69/metube\ncontainer_name: metube\nhostname: metube\nexpose:\n- \"${METUBE_HTTP_PORT}\"\nenvironment:\n- VIRTUAL_HOST=${METUBE_HOMEPAGE_URL}\n- VIRTUAL_PORT=${METUBE_HTTP_PORT}\nports:\n- ${METUBE_HTTP_PORT}:8081\nvolumes:\n- ${METUBE_DOWNLOAD_DIR}:/downloads\nlabels:\n- homepage.group=Media\n- homepage.name=MeTube\n- homepage.icon=metube.png\n- homepage.href=$METUBE_HOMEPAGE_URL\n- homepage.ping=$METUBE_HOMEPAGE_PING\n- homepage.description=$METUBE_HOMEPAGE_DESCRIPTION\n- homepage.hideErrors=true\n- homepage.showStats=true\n</code></pre> View Source: /environments/demo/media/metube.yml</p>"},{"location":"environments/demo/media/metube/#metubeenv","title":"metube.env","text":"<p>Primary environment file for metube <pre><code>METUBE_HOMEPAGE_DESCRIPTION=youtube-dl web UI\nMETUBE_HOMEPAGE_URL=http://${NETWORK_HOST}:${METUBE_HTTP_PORT}\nMETUBE_HOMEPAGE_PING=http://metube:${METUBE_HTTP_PORT}\nMETUBE_DOWNLOAD_DIR=/tmp\n</code></pre> View Source: /environments/demo/media/metube.env</p>"},{"location":"environments/demo/media/tube-archivist/","title":"tube-archivist","text":""},{"location":"environments/demo/media/tube-archivist/#containers","title":"Containers","text":""},{"location":"environments/demo/media/tube-archivist/#tubearchivist","title":"tubearchivist","text":""},{"location":"environments/demo/media/tube-archivist/#tubearchivist-redis","title":"tubearchivist-redis","text":""},{"location":"environments/demo/media/tube-archivist/#tubearchivist-es","title":"tubearchivist-es","text":""},{"location":"environments/demo/media/tube-archivist/#tubearchivist-esyml","title":"tubearchivist-es.yml","text":"<p>Primary docker compose file for tubearchivist-es <pre><code>version: \"3.9\"\nnetworks:\nt2_proxy:\nname: t2_proxy\nexternal: true\nsocket_proxy:\nname: socket_proxy\nexternal: true\nservices:\n# https://github.com/tubearchivist/tubearchivist\ntubearchivist:\nextends:\nfile: ../../common-services.yml\nservice: init_with_networks\ncontainer_name: tubearchivist\nhostname: tubearchivist    image: bbilly1/tubearchivist\nports:\n- ${TUBEARCHIVIST_HTTP_PORT}:8000\nvolumes:\n- ./data/tube-archivist/media:/youtube\n- ./data/tube-archivist/cache:/cache\nenvironment:\n- ES_URL=http://tubearchivist-es:9200     # needs protocol e.g. http and port\n- REDIS_HOST=tubearchivist-redis          # don't add protocol\n- HOST_UID=1000\n- HOST_GID=1000\n- TA_HOST=${NETWORK_HOST}      # set your host name\n- TA_USERNAME=${TUBEARCHIVIST_ADMIN_USERNAME}           # your initial TA credentials\n- TA_PASSWORD=${TUBEARCHIVIST_ADMIN_PASSWORD}              # your initial TA credentials\n- ELASTIC_PASSWORD=${TUBEARCHIVIST_ELASTIC_PASSWORD}         # set password for Elasticsearch\ndepends_on:\n- tubearchivist-es\n- tubearchivist-redis\nlabels:\n- homepage.group=Media\n- homepage.name=Tube Archivist\n- homepage.icon=tube-archivist-light.png\n- homepage.href=$TUBEARCHIVIST_HOMEPAGE_URL\n- homepage.ping=$TUBEARCHIVIST_HOMEPAGE_PING\n- homepage.description=$TUBEARCHIVIST_HOMEPAGE_DESCRIPTION\n- homepage.hideErrors=true\n- homepage.showStats=true\ntubearchivist-redis:\nextends:\nfile: ../../common-services.yml\nservice: init_with_networks\nimage: redis/redis-stack-server\ncontainer_name: tubearchivist-redis\nhostname: tubearchivist-redis\nexpose:\n- \"6379\"\nvolumes:\n- ./data/tube-archivist/redis:/data\ndepends_on:\n- tubearchivist-es\n# NOTE: Create the volume directory and then run this to avoid permission issues:\n# sudo chown 1000:0 -R environments/demo/media/data/tube-archivist/es\ntubearchivist-es:\nextends:\nfile: ../../common-services.yml\nservice: with_networks\n# image: bbilly1/tubearchivist-es\nimage: elasticsearch:8.8.0 # rasoberry pi\ncontainer_name: tubearchivist-es\nhostname: tubearchivist-es\nenvironment:\n- ELASTIC_PASSWORD=${TUBEARCHIVIST_ELASTIC_PASSWORD}\n- \"ES_JAVA_OPTS=-Xms512m -Xmx512m\"\n- \"xpack.security.enabled=true\"\n- \"discovery.type=single-node\"\n- \"path.repo=/usr/share/elasticsearch/data/snapshot\"\nulimits:\nmemlock:\nsoft: -1\nhard: -1\nvolumes:\n- ./data/tube-archivist/es:/usr/share/elasticsearch/data expose:\n- \"9200\"\n</code></pre> View Source: /environments/demo/media/tube-archivist.yml</p>"},{"location":"environments/demo/media/tube-archivist/#tubearchivist-esenv","title":"tubearchivist-es.env","text":"<p>Primary environment file for tubearchivist-es <pre><code>TUBEARCHIVIST_HOMEPAGE_DESCRIPTION=Your self hosted YouTube media server\nTUBEARCHIVIST_HOMEPAGE_URL=http://${NETWORK_HOST}:${TUBEARCHIVIST_HTTP_PORT}\nTUBEARCHIVIST_HOMEPAGE_PING=http://${NETWORK_HOST}:${TUBEARCHIVIST_HTTP_PORT}\n</code></pre> View Source: /environments/demo/media/tube-archivist.env</p>"},{"location":"environments/demo/media/tube-archivist/#tubearchivist-essecrets","title":"tubearchivist-es.secrets","text":"<p>Primary secrets file for tubearchivist-es <pre><code>TUBEARCHIVIST_ADMIN_USERNAME=\nTUBEARCHIVIST_ADMIN_PASSWORD=\nTUBEARCHIVIST_ELASTIC_PASSWORD=\n</code></pre> View Source: /environments/demo/media/tube-archivist.secrets.example</p>"},{"location":"environments/demo/monitoring/glances/","title":"glances","text":""},{"location":"environments/demo/monitoring/glances/#containers","title":"Containers","text":""},{"location":"environments/demo/monitoring/glances/#glances_1","title":"glances","text":""},{"location":"environments/demo/monitoring/glances/#glancesyml","title":"glances.yml","text":"<p>Primary docker compose file for glances <pre><code>version: \"3.9\"\nnetworks:\nt2_proxy:\nname: t2_proxy\nexternal: true\nsocket_proxy:\nname: socket_proxy\nexternal: true\nservices:\n# https://github.com/nicolargo/glances\nglances:\nextends:\nfile: ../../common-services.yml\nservice: init_with_networks\nimage: nicolargo/glances:latest-full\ncontainer_name: glances\nhostname: glances\nenvironment:\n- GLANCES_OPT=-w\nports:\n- ${GLANCES_HTTP_PORT}:61208\n- ${GLANCES_HTTPS_PORT}:61209\nlabels:\n- homepage.group=Monitoring\n- homepage.name=Glances\n- homepage.icon=glances.png\n- homepage.href=$GLANCES_HOMEPAGE_URL\n- homepage.ping=$GLANCES_HOMEPAGE_PING\n- homepage.description=$GLANCES_HOMEPAGE_DESCRIPTION\n- homepage.hideErrors=true\n- homepage.showStats=true\n</code></pre> View Source: /environments/demo/monitoring/glances.yml</p>"},{"location":"environments/demo/monitoring/glances/#glancesenv","title":"glances.env","text":"<p>Primary environment file for glances <pre><code>GLANCES_HOMEPAGE_URL=http://${NETWORK_HOST}:${GLANCES_HTTP_PORT}\nGLANCES_HOMEPAGE_PING=http://${NETWORK_HOST}:${GLANCES_HTTP_PORT}\nGLANCES_HOMEPAGE_DESCRIPTION=Glances an Eye on your system. A top/htop alternative for GNU/Linux, BSD, Mac OS and Windows operating systems.\n</code></pre> View Source: /environments/demo/monitoring/glances.env</p>"},{"location":"environments/demo/monitoring/uptime-kuma/","title":"uptime-kuma","text":""},{"location":"environments/demo/monitoring/uptime-kuma/#containers","title":"Containers","text":""},{"location":"environments/demo/monitoring/uptime-kuma/#uptime-kuma_1","title":"uptime-kuma","text":""},{"location":"environments/demo/monitoring/uptime-kuma/#uptime-kumayml","title":"uptime-kuma.yml","text":"<p>Primary docker compose file for uptime-kuma <pre><code>version: \"3.9\"\nnetworks:\nt2_proxy:\nname: t2_proxy\nexternal: true\nsocket_proxy:\nname: socket_proxy\nexternal: true\nservices:\n# https://github.com/louislam/uptime-kuma\nuptime-kuma:\nextends:\nfile: ../../common-services.yml\nservice: init_with_networks\nimage: louislam/uptime-kuma:1\ncontainer_name: uptime-kuma\nhostname: uptime-kuma\nports:\n- ${UPTIME_KUMA_HTTP_PORT}:3001\nvolumes:\n- ./data/uptime-kuma/data:/app/data\nlabels:\n- homepage.group=Monitoring\n- homepage.name=Uptime Kuma\n- homepage.icon=uptime-kuma.png\n- homepage.href=$UPTIME_KUMA_HOMEPAGE_URL\n- homepage.ping=$UPTIME_KUMA_HOMEPAGE_PING\n- homepage.description=$UPTIME_KUMA_HOMEPAGE_DESCRIPTION\n# - homepage.widget.type=uptimekuma\n# - homepage.widget.url=${UPTIME_KUMA_HOMEPAGE_URL}\n# - homepage.widget.slug=all\n- homepage.hideErrors=true\n- homepage.showStats=true      </code></pre> View Source: /environments/demo/monitoring/uptime-kuma.yml</p>"},{"location":"environments/demo/monitoring/uptime-kuma/#uptime-kumaenv","title":"uptime-kuma.env","text":"<p>Primary environment file for uptime-kuma <pre><code>UPTIME_KUMA_HOMEPAGE_URL=http://${NETWORK_HOST}:${UPTIME_KUMA_HTTP_PORT}\nUPTIME_KUMA_HOMEPAGE_PING=http://${NETWORK_HOST}:${UPTIME_KUMA_HTTP_PORT}\nUPTIME_KUMA_HOMEPAGE_DESCRIPTION=A fancy self-hosted monitoring tool\n</code></pre> View Source: /environments/demo/monitoring/uptime-kuma.env</p>"},{"location":"environments/demo/networking/adguardhome/","title":"adguardhome","text":""},{"location":"environments/demo/networking/adguardhome/#containers","title":"Containers","text":""},{"location":"environments/demo/networking/adguardhome/#adguardhome_1","title":"adguardhome","text":""},{"location":"environments/demo/networking/adguardhome/#adguardhomeyml","title":"adguardhome.yml","text":"<p>Primary docker compose file for adguardhome <pre><code>version: \"3.9\"\nnetworks:\nt2_proxy:\nname: t2_proxy\nexternal: true\nsocket_proxy:\nname: socket_proxy\nexternal: true\nservices:\n# https://hub.docker.com/r/adguard/adguardhome\nadguardhome:\nextends:\nfile: ../../common-services.yml\nservice: init_with_networks\nimage: adguard/adguardhome\ncontainer_name: adguardhome\nhostname: adguardhome\nvolumes:\n- ./data/adguardhome/work:/opt/adguardhome/work\n- ./data/adguardhome/conf:/opt/adguardhome/conf\nports:\n- 53:53/tcp # DNS server\n- 53:53/udp # DNS server\n- 3004:80 # admin\n# - 443:443 # admin\n- 3002:3000/tcp # setup\n# - ${ADGUARDHOME_PORT}:3000/tcp # setup\nlabels:\n- homepage.group=Networking\n- homepage.name=AdGuard Home\n- homepage.icon=/icons/adguard-home.png\n- homepage.href=${ADGUARDHOME_HOMEPAGE_URL}\n- homepage.ping=${ADGUARDHOME_HOMEPAGE_PING}\n- homepage.description=${ADGUARDHOME_HOMEPAGE_DESCRIPTION}\n- homepage.widget.type=adguard\n- homepage.widget.url=${ADGUARDHOME_HOMEPAGE_URL}\n- homepage.widget.username=${ADGUARDHOME_HOMEPAGE_USERNAME}\n- homepage.widget.password=${ADGUARDHOME_HOMEPAGE_PASSWORD}\n- homepage.hideErrors=true\n- homepage.showStats=false\n</code></pre> View Source: /environments/demo/networking/adguardhome.yml</p>"},{"location":"environments/demo/networking/adguardhome/#adguardhomeenv","title":"adguardhome.env","text":"<p>Primary environment file for adguardhome <pre><code>ADGUARDHOME_PORT=3002\nADGUARDHOME_HOMEPAGE_URL=http://${NETWORK_HOST}:3004\nADGUARDHOME_HOMEPAGE_PING=http://${NETWORK_HOST}:3004\nADGUARDHOME_HOMEPAGE_DESCRIPTION=\n</code></pre> View Source: /environments/demo/networking/adguardhome.env</p>"},{"location":"environments/demo/networking/adguardhome/#adguardhomesecrets","title":"adguardhome.secrets","text":"<p>Primary secrets file for adguardhome <pre><code>ADGUARDHOME_HOMEPAGE_USERNAME=\nADGUARDHOME_HOMEPAGE_PASSWORD=\n</code></pre> View Source: /environments/demo/networking/adguardhome.secrets.example</p>"},{"location":"environments/demo/other/home-assistant/","title":"home-assistant","text":""},{"location":"environments/demo/other/home-assistant/#containers","title":"Containers","text":""},{"location":"environments/demo/other/home-assistant/#homeassistant","title":"homeassistant","text":""},{"location":"environments/demo/other/home-assistant/#homeassistantyml","title":"homeassistant.yml","text":"<p>Primary docker compose file for homeassistant <pre><code>version: \"3.9\"\nservices:\n# https://www.home-assistant.io/installation/alternative/#docker-compose\nhomeassistant:\nextends:\nfile: ../../common-services.yml\nservice: base\nimage: ghcr.io/home-assistant/home-assistant:stable\ncontainer_name: homeassistant\nhostname: homeassistant     volumes:\n- ./data/home-assistant/config:/config\n- /etc/localtime:/etc/localtime:ro      privileged: true\nnetwork_mode: host\nlabels:\n- homepage.group=Other\n- homepage.name=Home Assistant\n- homepage.icon=home-assistant.png\n- homepage.href=$HOMEASSISTANT_HOMEPAGE_URL\n- homepage.ping=$HOMEASSISTANT_HOMEPAGE_PING\n- homepage.description=$HOMEASSISTANT_HOMEPAGE_DESCRIPTION\n- homepage.hideErrors=true\n- homepage.showStats=true\n</code></pre> View Source: /environments/demo/other/home-assistant.yml</p>"},{"location":"environments/demo/other/home-assistant/#homeassistantenv","title":"homeassistant.env","text":"<p>Primary environment file for homeassistant <pre><code>HOMEASSISTANT_HOMEPAGE_DESCRIPTION=Open source home automation that puts local control and privacy first. HOMEASSISTANT_HOMEPAGE_URL=http://${NETWORK_HOST}:${HOMEASSISTANT_HTTP_PORT}\nHOMEASSISTANT_HOMEPAGE_PING=http://${NETWORK_HOST}:${HOMEASSISTANT_HTTP_PORT}\n</code></pre> View Source: /environments/demo/other/home-assistant.env</p>"},{"location":"environments/demo/other/linkding/","title":"linkding","text":""},{"location":"environments/demo/other/linkding/#containers","title":"Containers","text":""},{"location":"environments/demo/other/linkding/#linkding_1","title":"linkding","text":""},{"location":"environments/demo/other/linkding/#linkdingyml","title":"linkding.yml","text":"<p>Primary docker compose file for linkding <pre><code>version: \"3.9\"\nnetworks:\nt2_proxy:\nname: t2_proxy\nexternal: true\nsocket_proxy:\nname: socket_proxy\nexternal: true\nservices:\n# https://github.com/sissbruecker/linkding\nlinkding:\nextends:\nfile: ../../common-services.yml\nservice: init_with_networks  image: sissbruecker/linkding:latest\ncontainer_name: linkding\nhostname: linkding\nports:\n- \"${LINKDING_HTTP_PORT:-9090}:9090\"\nvolumes:\n- ./data/linkding/data:/etc/linkding/data\nenvironment:\n- LD_SUPERUSER_NAME=${LINKDING_SUPERUSER_NAME}\n- LD_SUPERUSER_PASSWORD=${LINKDING_SUPERUSER_PASSWORD}  labels:\n- homepage.group=Other\n- homepage.name=LinkDing\n- homepage.icon=linkding.png\n- homepage.href=$LINKDING_HOMEPAGE_URL\n- homepage.ping=$LINKDING_HOMEPAGE_PING\n- homepage.description=$LINKDING_HOMEPAGE_DESCRIPTION\n- homepage.hideErrors=true\n- homepage.showStats=true\n</code></pre> View Source: /environments/demo/other/linkding.yml</p>"},{"location":"environments/demo/other/linkding/#linkdingenv","title":"linkding.env","text":"<p>Primary environment file for linkding <pre><code>LINKDING_HOMEPAGE_DESCRIPTION=Self-hosted bookmark manager that is designed be to be minimal, fast, and easy to set up using Docker.\nLINKDING_HOMEPAGE_URL=http://${NETWORK_HOST}:${LINKDING_HTTP_PORT}\nLINKDING_HOMEPAGE_PING=http://linkding:${LINKDING_HTTP_PORT}\n</code></pre> View Source: /environments/demo/other/linkding.env</p>"},{"location":"environments/demo/other/linkding/#linkdingsecrets","title":"linkding.secrets","text":"<p>Primary secrets file for linkding <pre><code>LINKDING_SUPERUSER_NAME=\nLINKDING_SUPERUSER_PASSWORD=\n</code></pre> View Source: /environments/demo/other/linkding.secrets.example</p>"},{"location":"environments/demo/other/node-red/","title":"node-red","text":""},{"location":"environments/demo/other/node-red/#containers","title":"Containers","text":""},{"location":"environments/demo/other/node-red/#node-red_1","title":"node-red","text":""},{"location":"environments/demo/other/node-red/#node-redyml","title":"node-red.yml","text":"<p>Primary docker compose file for node-red <pre><code>version: \"3.9\"\nnetworks:\nt2_proxy:\nname: t2_proxy\nexternal: true\nsocket_proxy:\nname: socket_proxy\nexternal: true\nservices:\n# https://github.com/node-red/node-red\n# https://hub.docker.com/r/nodered/node-red\n# NOTE: You need to pre-create the local node-red folder and run the following before composing:\n# sudo chown -R $USER:$USER environments/demo/other/data/node-red\n# sudo chmod -R 777 environments/demo/other/data/node-red\nnode-red:\nextends:\nfile: ../../common-services.yml\nservice: init_with_networks  image: nodered/node-red:latest\ncontainer_name: node-red\nhostname: node-red\nports:\n- \"${NODERED_HTTP_PORT:-9090}:1880\"\nvolumes:\n- ./data/node-red/data:/data\nlabels:\n- homepage.group=Other\n- homepage.name=Node-RED\n- homepage.icon=node-red.png\n- homepage.href=$NODERED_HOMEPAGE_URL\n- homepage.ping=$NODERED_HOMEPAGE_PING\n- homepage.description=$NODERED_HOMEPAGE_DESCRIPTION\n- homepage.hideErrors=true\n- homepage.showStats=true\n</code></pre> View Source: /environments/demo/other/node-red.yml</p>"},{"location":"environments/demo/other/node-red/#node-redenv","title":"node-red.env","text":"<p>Primary environment file for node-red <pre><code>NODERED_HOMEPAGE_DESCRIPTION=Low-code programming for event-driven applications\nNODERED_HOMEPAGE_URL=http://${NETWORK_HOST}:${NODERED_HTTP_PORT}\nNODERED_HOMEPAGE_PING=http://${NETWORK_HOST}:${NODERED_HTTP_PORT}\n</code></pre> View Source: /environments/demo/other/node-red.env</p>"},{"location":"environments/demo/other/vaultwarden/","title":"vaultwarden","text":""},{"location":"environments/demo/other/vaultwarden/#containers","title":"Containers","text":""},{"location":"environments/demo/other/vaultwarden/#vaultwarden_1","title":"vaultwarden","text":""},{"location":"environments/demo/other/vaultwarden/#vaultwardenyml","title":"vaultwarden.yml","text":"<p>Primary docker compose file for vaultwarden <pre><code>version: \"3.9\"\nnetworks:\nt2_proxy:\nname: t2_proxy\nexternal: true\nsocket_proxy:\nname: socket_proxy\nexternal: true\nservices:\nvaultwarden:\nextends:\nfile: ../../common-services.yml\nservice: init_with_networks\nimage: vaultwarden/server:latest\ncontainer_name: vaultwarden\nhostname: vaultwarden\nports:\n- ${VAULTWARDEN_HTTP_PORT}:80\nvolumes:\n- ./data/vaultwarden/data:/data\nlabels:\n- homepage.group=Other\n- homepage.name=Vaultwarden\n- homepage.icon=vaultwarden-light.png\n- homepage.href=$VAULTWARDEN_HOMEPAGE_URL\n- homepage.ping=$VAULTWARDEN_HOMEPAGE_PING\n- homepage.description=$VAULTWARDEN_HOMEPAGE_DESCRIPTION\n- homepage.hideErrors=true\n- homepage.showStats=true </code></pre> View Source: /environments/demo/other/vaultwarden.yml</p>"},{"location":"environments/demo/other/vaultwarden/#vaultwardenenv","title":"vaultwarden.env","text":"<p>Primary environment file for vaultwarden <pre><code>VAULTWARDEN_HOMEPAGE_DESCRIPTION=Unofficial Bitwarden compatible server written in Rust, formerly known as bitwarden_rs\nVAULTWARDEN_HOMEPAGE_URL=http://${NETWORK_HOST}:${VAULTWARDEN_HTTP_PORT}\nVAULTWARDEN_HOMEPAGE_PING=http://${NETWORK_HOST}:${VAULTWARDEN_HTTP_PORT}\n</code></pre> View Source: /environments/demo/other/vaultwarden.env</p>"},{"location":"environments/demo/other/whoogle/","title":"whoogle","text":""},{"location":"environments/demo/other/whoogle/#containers","title":"Containers","text":""},{"location":"environments/demo/other/whoogle/#whoogle_1","title":"whoogle","text":""},{"location":"environments/demo/other/whoogle/#whoogleyml","title":"whoogle.yml","text":"<p>Primary docker compose file for whoogle <pre><code>version: \"3.9\"\nnetworks:\nt2_proxy:\nname: t2_proxy\nexternal: true\nsocket_proxy:\nname: socket_proxy\nexternal: true\nservices:\n# https://github.com/benbusby/whoogle-search\nwhoogle:\nextends:\nfile: ../../common-services.yml\nservice: init_with_networks\nimage: benbusby/whoogle-search:latest\ncontainer_name: whoogle\nhostname: whoogle\nports:\n- ${WHOOGLE_HTTP_PORT}:5000\nlabels:\n- homepage.group=Other\n- homepage.name=Whoogle\n- homepage.icon=whooglesearch.png\n- homepage.href=$WHOOGLE_HOMEPAGE_URL\n- homepage.ping=$WHOOGLE_HOMEPAGE_PING\n- homepage.description=$WHOOGLE_HOMEPAGE_DESCRIPTION\n- homepage.hideErrors=true\n- homepage.showStats=true      </code></pre> View Source: /environments/demo/other/whoogle.yml</p>"},{"location":"environments/demo/other/whoogle/#whoogleenv","title":"whoogle.env","text":"<p>Primary environment file for whoogle <pre><code>WHOOGLE_HOMEPAGE_DESCRIPTION=A self-hosted, ad-free, privacy-respecting metasearch engine\nWHOOGLE_HOMEPAGE_URL=http://${NETWORK_HOST}:${WHOOGLE_HTTP_PORT}\nWHOOGLE_HOMEPAGE_PING=http://${NETWORK_HOST}:${WHOOGLE_HTTP_PORT}\n</code></pre> View Source: /environments/demo/other/whoogle.env</p>"},{"location":"environments/demo/self-hosting/fail2ban/","title":"fail2ban","text":""},{"location":"environments/demo/self-hosting/fail2ban/#containers","title":"Containers","text":""},{"location":"environments/demo/self-hosting/fail2ban/#fail2ban_1","title":"fail2ban","text":""},{"location":"environments/demo/self-hosting/fail2ban/#fail2banyml","title":"fail2ban.yml","text":"<p>Primary docker compose file for fail2ban <pre><code>version: \"3.9\"\nservices:\nfail2ban:\nextends:\nfile: ../../common-services.yml\nservice: base # cannot use init\nimage: lscr.io/linuxserver/fail2ban:latest\ncontainer_name: fail2ban\nhostname: fail2ban\ncap_add:\n- NET_ADMIN\n- NET_RAW\nnetwork_mode: host\nenvironment:\n- VERBOSITY=-vv #optional\nvolumes:\n- /path/to/appdata/config:/config\n- /var/log:/var/log:ro\n# - /path/to/airsonic/log:/remotelogs/airsonic:ro #optional\n# - /path/to/apache2/log:/remotelogs/apache2:ro #optional\n# - /path/to/authelia/log:/remotelogs/authelia:ro #optional\n# - /path/to/emby/log:/remotelogs/emby:ro #optional\n# - /path/to/filebrowser/log:/remotelogs/filebrowser:ro #optional\n# - /path/to/homeassistant/log:/remotelogs/homeassistant:ro #optional\n# - /path/to/lighttpd/log:/remotelogs/lighttpd:ro #optional\n# - /path/to/nextcloud/log:/remotelogs/nextcloud:ro #optional\n# - /path/to/nginx/log:/remotelogs/nginx:ro #optional\n# - /path/to/nzbget/log:/remotelogs/nzbget:ro #optional\n# - ./../media/data/overseerr/log:/remotelogs/overseerr:ro #optional\n# - ./../media/data/prowlarr/log:/remotelogs/prowlarr:ro #optional\n# - ./../media/data/radarr/log:/remotelogs/radarr:ro #optional\n# - ./../media/data/sabnzbd/log:/remotelogs/sabnzbd:ro #optional\n# - ./../media/data/sonarr/log:/remotelogs/sonarr:ro #optional\n# - /path/to/unificontroller/log:/remotelogs/unificontroller:ro #optional\n# - ./../other/data/vaultwarden/data:/remotelogs/vaultwarden:ro #optional\n</code></pre> View Source: /environments/demo/self-hosting/fail2ban.yml</p>"},{"location":"environments/demo/self-hosting/socket-proxy/","title":"socket-proxy","text":""},{"location":"environments/demo/self-hosting/socket-proxy/#containers","title":"Containers","text":""},{"location":"environments/demo/self-hosting/socket-proxy/#socket-proxy_1","title":"socket-proxy","text":""},{"location":"environments/demo/self-hosting/socket-proxy/#socket-proxyyml","title":"socket-proxy.yml","text":"<p>Primary docker compose file for socket-proxy <pre><code>version: \"3.9\"\nnetworks:\nt2_proxy:\nname: t2_proxy\ndriver: bridge\nipam:\nconfig:\n- subnet: 192.168.90.0/24\ndefault:\ndriver: bridge\nsocket_proxy:\nname: socket_proxy\ndriver: bridge\nipam:\nconfig:\n- subnet: 192.168.91.0/24\nservices:\n# https://github.com/Tecnativa/docker-socket-proxy\nsocket-proxy:\nextends:\nfile: ../../common-services.yml\nservice: init_with_networks\ncontainer_name: socket-proxy\nhostname: socket-proxy\nimage: tecnativa/docker-socket-proxy\nprivileged: true\nports:\n- \"127.0.0.1:2375:2375\"\nnetworks:\nsocket_proxy:\nipv4_address: 192.168.91.254\nvolumes:\n- \"/var/run/docker.sock:/var/run/docker.sock\"\nenvironment:\n## Granted by Default\n- EVENTS=1\n- PING=1\n- VERSION=1\n## Revoked by Default\n# Security critical\n- AUTH=0\n- SECRETS=0\n- POST=1 # Watchtower\n# Not always needed\n- BUILD=0\n- COMMIT=0\n- CONFIGS=0\n- CONTAINERS=1 # Traefik, portainer, etc.\n- DISTRIBUTION=0\n- EXEC=1 # Portainer (console access)\n- IMAGES=1 # Portainer\n- INFO=1 # Portainer\n- NETWORKS=1 # Portainer\n- NODES=0\n- PLUGINS=0\n- SERVICES=1 # Portainer\n- SESSION=0\n- SWARM=0\n- SYSTEM=0\n- TASKS=1 # Portainer\n- VOLUMES=1 # Portainer\nlabels:\n- homepage.group=Self Hosting\n- homepage.name=Socket Proxy\n- homepage.icon=docker.png\n- homepage.description=$SOCKETPROXY_HOMEPAGE_DESCRIPTION\n- homepage.hideErrors=true\n- homepage.showStats=true\n</code></pre> View Source: /environments/demo/self-hosting/socket-proxy.yml</p>"},{"location":"environments/demo/self-hosting/socket-proxy/#socket-proxyenv","title":"socket-proxy.env","text":"<p>Primary environment file for socket-proxy <pre><code>SOCKETPROXY_HOMEPAGE_DESCRIPTION=Proxy over your Docker socket to restrict which requests it accepts\n</code></pre> View Source: /environments/demo/self-hosting/socket-proxy.env</p>"},{"location":"environments/example/","title":"Overview","text":"<p>This is an example environment with a few containers to get you started.</p>"},{"location":"environments/example/#containers","title":"Containers","text":"stackcontainerdescriptionbasicshello-worldbasicswhoamicodingcode-server"},{"location":"environments/example/#stackstxt","title":"stacks.txt","text":"<p>Stacks used when composing an entire environment (ex. <code>tools/compose.sh example up</code>) <pre><code>coding\n</code></pre> View Source: ./environments/example/stacks.txt</p>"},{"location":"environments/example/basics/hello-world/","title":"hello-world","text":""},{"location":"environments/example/basics/hello-world/#containers","title":"Containers","text":""},{"location":"environments/example/basics/hello-world/#hello-world_1","title":"hello-world","text":""},{"location":"environments/example/basics/hello-world/#hello-worldyml","title":"hello-world.yml","text":"<p>Primary docker compose file for hello-world <pre><code>version: \"3.9\"\nservices:\n# https://hub.docker.com/_/hello-world\nhello-world:\nextends:\nfile: ../../common-services.yml\nservice: image_base\nimage: hello-world\ncontainer_name: hello-world\nhostname: hello-world\n</code></pre> View Source: /environments/example/basics/hello-world.yml</p>"},{"location":"environments/example/basics/whoami/","title":"whoami","text":""},{"location":"environments/example/basics/whoami/#containers","title":"Containers","text":""},{"location":"environments/example/basics/whoami/#whoami_1","title":"whoami","text":""},{"location":"environments/example/basics/whoami/#whoamiyml","title":"whoami.yml","text":"<p>Primary docker compose file for whoami <pre><code>version: \"3.9\"\nservices:\n# https://hub.docker.com/r/jwilder/whoami\nwhoami:\nextends:\nfile: ../../common-services.yml\nservice: image_base\nimage: jwilder/whoami\ncontainer_name: whoami\nhostname: whoami\n</code></pre> View Source: /environments/example/basics/whoami.yml</p>"},{"location":"environments/example/coding/code-server/","title":"code-server","text":""},{"location":"environments/example/coding/code-server/#containers","title":"Containers","text":""},{"location":"environments/example/coding/code-server/#code-server_1","title":"code-server","text":""},{"location":"environments/example/coding/code-server/#code-serveryml","title":"code-server.yml","text":"<p>Primary docker compose file for code-server <pre><code>version: \"3.9\"\nnetworks:\ndefault:\nexternal: false\nservices:\ncode-server:\nextends:\nfile: ../../common-services.yml\nservice: image_base_no_init\nimage: lscr.io/linuxserver/code-server:latest\ncontainer_name: code-server\nhostname: code-server\nnetworks:\n- default\nenvironment:\n- SUDO_PASSWORD=${CODESERVER_SUDO_PASSWORD}\n- DEFAULT_WORKSPACE=/config/workspace\nvolumes:\n- ./data/code-server/config:/config\nports:\n- ${CODESERVER_PORT}:8443\n</code></pre> View Source: /environments/example/coding/code-server.yml</p>"},{"location":"environments/example/coding/code-server/#code-serverenv","title":"code-server.env","text":"<p>Primary environment file for code-server <pre><code>CODESERVER_PORT=8443\n</code></pre> View Source: /environments/example/coding/code-server.env</p>"},{"location":"environments/example/coding/code-server/#code-serversecrets","title":"code-server.secrets","text":"<p>Primary secrets file for code-server <pre><code>CODESERVER_SUDO_PASSWORD=\n</code></pre> View Source: /environments/example/coding/code-server.secrets.example</p>"}]}